package com.chanhlt.eject.mybatis.mapper;

import com.chanhlt.eject.mybatis.model.UserKey;
import com.chanhlt.eject.mybatis.model.UserWithBLOBs;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;

@Mapper
public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Thu May 10 18:36:41 JST 2018
     */
    @Select({
        "select",
        "Host, User, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, ",
        "Drop_priv, Reload_priv, Shutdown_priv, Process_priv, File_priv, Grant_priv, ",
        "References_priv, Index_priv, Alter_priv, Show_db_priv, Super_priv, Create_tmp_table_priv, ",
        "Lock_tables_priv, Execute_priv, Repl_slave_priv, Repl_client_priv, Create_view_priv, ",
        "Show_view_priv, Create_routine_priv, Alter_routine_priv, Create_user_priv, Event_priv, ",
        "Trigger_priv, Create_tablespace_priv, ssl_type, max_questions, max_updates, ",
        "max_connections, max_user_connections, plugin, password_expired, password_last_changed, ",
        "password_lifetime, account_locked, ssl_cipher, x509_issuer, x509_subject, authentication_string",
        "from user",
        "where Host = #{host,jdbcType=CHAR}",
          "and User = #{user,jdbcType=CHAR}"
    })
    @ResultMap("com.chanhlt.eject.mybatis.mapper.UserMapper.ResultMapWithBLOBs")
    UserWithBLOBs selectByPrimaryKey(UserKey key);
}